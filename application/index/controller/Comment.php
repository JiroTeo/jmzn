<?php
namespace app\index\controller;
use think\Cache;
use think\Db;
use think\Controller;
use think\Model;

class comment extends Base{

    private $ComModel;

    public function _initialize(){
        parent::_initialize(); // TODO: Change the autogenerated stub
        // 实例化y用户模型
        $this->ComModel = model('comment');
    }
    /*  todo    文章详情-获取评论列表     get_comment_list
    /*  todo    发表评论        addComment
     *  todo    我的评论列表    com_list
     *  todo    评论点赞        likes
     * */

    /*  文章详情-获取评论列表 */
    public function get_comment_list(){
        //接收参数 && 定义条件
        //分页
        $page = empty($_REQUEST['page']) ? 0 : $_REQUEST['page'];
        $num = empty($_REQUEST['num']) ? 7 : $_REQUEST['num'];
        $limit = ( $page * $num ) . ' , ' . $num ;

        $tid = empty($_REQUEST['id']) ? 0 : $_REQUEST['id'];
        //验证文章id
        if(empty($tid)){
            $rinfo = $this -> returnCode['ERROR'][1];
            wapReturn($rinfo);
        }
        $where['topic_id'] = $tid;
        $where['status'] = 1;
        $dataList['data'] = $this -> ComModel -> getComment($where,'addtime desc',$limit,1,$this -> user);
        $dataList['count'] = $this -> ComModel -> countNum($where);
        $rinfo = $this -> returnCode['SUCCESS'][0];
        $rinfo['data'] = $dataList;
        wapReturn($rinfo);
    }


    /*发表评论*/
    public function add_comment(){
        //验证登录
        if(empty($this -> user)){
            $rinfo = $this -> returnCode['ERROR'][5];
            wapReturn($rinfo);
        }
        //接收&&格式化参数
        $data['topic_id'] = $_REQUEST['topic_id'];
        $data['form_uid'] = $this -> user['uid'];
        $data['to_uid'] = $_REQUEST['to_uid'];
        $data['content'] = $_REQUEST['content'];
        $data['pid'] = $_REQUEST['pid'];
        $data['addtime'] = time();
        $result = $this -> ComModel -> addComment($data);
        if($result){
            //添加通知消息
            $addNotice['tid'] = $_REQUEST['topic_id'];
            $addNotice['uid'] = $_REQUEST['to_uid'];
            $addNotice['form_uid'] = $this -> user['uid'];
            $addNotice['content'] = $_REQUEST['content'];
            $addNotice['type'] = 1;
            $addNotice['status'] = 1;
            $addNotice['addtime'] = time();
            db('notice') -> insertGetId($addNotice);
            //添加通知 end
            wapReturn($this -> returnCode['SUCCESS'][0]);
        }else{
            wapReturn($this -> returnCode['ERROR'][2]);
        }
    }

    /*我的评论列表*/
    public function com_list(){
        //验证登录
        if(empty($this -> user)){
            wapReturn($this -> returnCode['ERROR'][5]);
        }
        //获取&&定义 分页信息
        $num = empty($_REQUEST['num']) ? 10 : $_REQUEST['num'];
        $page = empty($_REQUEST['page']) ? 0 : $_REQUEST['page'] ;
        $limit = $page * $num.','.$num;
        //定义条件获取留言信息
        $where['form_uid'] = $this -> user['uid'];
        $where['status'] = 1;
        $where['to_type'] = 0;
        //分页
        $dataList['data'] = $this -> ComModel -> getCommentData($where,'addtime desc',$limit,1,$this->user,$this -> debug);
        $dataList['count'] = $this -> ComModel -> where($where) -> count();
        $rinfo = $this -> returnCode['SUCCESS'][0];
        $rinfo['data'] = $dataList;
        wapReturn($rinfo);
    }

    /*评论点赞*/
    public function add_likes(){

        $id = empty($_REQUEST['id']) ? wapReturn($this -> returnCode['ERROR'][1]) : $_REQUEST['id'];
        $uid = empty($this -> user['uid']) ? 0 : $this -> user['uid'];

        $where['id'] = $id;
        $res = $this -> ComModel -> commentLike($where);
        if($res){
            $rinfo = $this -> returnCode['SUCCESS'][0];
            //添加通知消息-判断是否登录
            if($uid != 0){
                $add['type'] = 2;
                $add['content'] = '赞了您的评论';
                $add['status'] = 1;
                $add['tid'] = $id;
                $add['form_uid'] = $uid;
                //查询出to_uid
                $conWhere['id'] = $id;
                $toUid = db('comment') -> where($conWhere) -> value('form_uid');
                $add['uid'] = $toUid;
                $add['addtime'] = time();
                $issetNotice['tid'] = $id;
                $issetNotice['type'] = 2;
                $issetNotice['uid'] = $toUid;
                $issetNotice['form_uid'] = $uid;
                $result = db('notice') -> where($issetNotice) -> find();
                if(empty($result)){
                    db('notice') -> insertGetId($add);
                }
            }
        }else{
            $rinfo = $this -> returnCode['ERROR'][0];

        }
        wapReturn($rinfo);
    }




}