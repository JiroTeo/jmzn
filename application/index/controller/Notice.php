<?php
namespace app\index\controller;
use think\Cache;
use think\Db;
use think\Controller;
class notice extends Base{

    private $noticeModel;

    public function _initialize(){
        parent::_initialize(); // TODO: Change the autogenerated stub
        $this-> noticeModel = model('notice');
    }

    /*  todo    评论&赞            like_notice
     *  todo    站内通知           notice_content
     *  todo    消息通知提示       get_notice_num
     * **/

    /*评论和赞*/
    public function like_notice(){
        //验证登录
        if(empty($this -> user)){
            $rinfo = $this -> returnCode['ERROR'][5];
            wapReturn($rinfo);
        }
        //接收分页数据
        $num = empty($_REQUEST['num']) ? 10 : $_REQUEST['num'];
        $page = empty($_REQUEST['page']) ? 0 : $_REQUEST['page'] ;
        $limit = $page * $num . ' , ' . $num ;

//        获取noticeData
        $getNoticeWhere['uid'] = $this -> user['uid'];
        $getNoticeWhere['status'] = 1;
        $getNoticeWhere['type'] = array('in','1,2');
        $dataList['data']  = $this -> noticeModel -> getNoticeData($getNoticeWhere , 'addtime  desc' , $limit , 1 , $this -> user );
        $dataList['count'] = $this -> noticeModel -> where($getNoticeWhere) -> count();
        $rinfo = $this -> returnCode['SUCCESS'][0];
        //改变消息通知状态为已读start
        $notiData['uid'] = $this -> user['uid'];
        $notiData['type'] = array('in','1,2');
        $this -> noticeModel -> read_notice($notiData);
//        改变消息通知状态为已读end
        //返回
        $rinfo['data'] = $dataList;
        wapReturn($rinfo);
    }
    /*站内通知*/
    public function notice_content(){
        $returnCode = config("RETURNLOG");
        //验证登录
        if(empty($this -> user)){
            wapReturn($returnCode['ERROR'][5]);
        }
        //接收分页数据
        $num = empty($_REQUEST['num']) ? 10 : $_REQUEST['num'];
        $page = empty($_REQUEST['page']) ? 0 : $_REQUEST['page'] ;
        $limit = $page * $num . ' , ' . $num ;
        //获取站内通知
        $where['type'] = 0;
        $where['status'] = 1;
        $where['uid'] = $this -> user['uid'];
        $dataList['data']  = $this -> noticeModel -> getNoticeData($where , 'addtime  desc' , $limit , 2 , $this -> user );
        $dataList['count'] = $this -> noticeModel -> where($where) -> count();
        $rinfo = $this -> returnCode['SUCCESS'][0];
        $rinfo['data'] = $dataList;
        //改变消息通知状态为已读start
        $nocData['uid'] = $this -> user['uid'];
        $nocData['type'] = 0;
        $this -> noticeModel -> read_notice($nocData);
        //改变消息通知状态为已读end
        wapReturn($rinfo);
    }

    /*消息通知提示*/
    public function get_notice_num(){
        //验证登录
        if(empty($this -> user)){
            wapReturn($this -> returnCode['ERROR'][5]);
        }
        //未读消息数量
        $where['uid'] = $this -> user['uid'];
        $where['read'] = 0;
        $where['status'] = 1;
        //评论和赞
        $where['type'] = array('in','1,2');
        $data['pl_num'] = $this -> noticeModel -> count_notice($where);
        //站内消息
        $where['type'] = 0;
        $data['news_num'] = $this -> noticeModel -> count_notice($where);
        //投资者提示
        $where['type'] = 3;
        $data['consult_inv_num'] = $this -> noticeModel -> count_notice($where);
        //留言提示
        $where['type'] = 4;
        $data['consult_notice_num'] = $this -> noticeModel -> count_notice($where);
        //项目收藏提示
        $where['type'] = 5;
        $data['item_num'] = $this -> noticeModel -> count_notice($where);
        //文章收藏提示
        $where['type'] = 6;
        $data['article_num'] = $this -> noticeModel -> count_notice($where);
        $data['count'] = $data['pl_num']+$data['news_num'];
        //返回数据
        $dataList = $this -> returnCode['SUCCESS'][0];
        $dataList['data'] = $data;
        wapReturn($dataList);
    }
}